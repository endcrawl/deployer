#!/bin/sh

. shellsafe || { echo "error sourcing shellsafe." 1>&2 ; exit 100 ; }

workdir="$1" ; shift ; export workdir

safe . deployer-setup-tests

# Test: create a feature branch off master.

(
  safe cd "$workdir/foo"
  safe git checkout -b feature
  safe touch 2.txt
  safe git add 2.txt
  safe git commit -m 2
)
rc="$?" ; [ "$rc" -ne 0 ] && exit "$rc"

# Test: request a new deployment (inject a job file into the queue).

safe deploy foo feature

# Test: run a deployment queue pass, which should process all jobs.

(
  safe cd "$DEPLOYER_QUEUE"
  safe deployer-queue 
)
rc="$?" ; [ "$rc" -ne 0 ] && exit "$rc"

# Test: check that the 2nd deployment switched to the feature branch.

(
  safe cd "$DEPLOYER_DEPLOY_ROOT"
  safe test -L foo
  safe test "`readlink foo`" = "foo.b"
  safe test -f foo/1.txt
  safe test -f foo/2.txt
)
rc="$?" ; [ "$rc" -ne 0 ] && exit "$rc"

# Test: merge the feature branch into master.

(
  safe cd "$workdir/foo"
  safe git checkout master
  safe git merge --ff-only feature
)
rc="$?" ; [ "$rc" -ne 0 ] && exit "$rc"

# Test: request a new deployment which switches back to master.

safe deploy foo master

# Test: run a deployment queue pass, which should process all jobs.

(
  safe cd "$DEPLOYER_QUEUE"
  safe deployer-queue 
)
rc="$?" ; [ "$rc" -ne 0 ] && exit "$rc"

# Test: check that the 3rd deployment switched back to the master branch.

(
  safe cd "$DEPLOYER_DEPLOY_ROOT"
  safe test -L foo
  safe test "`readlink foo`" = "foo.a"
  safe test -f foo/1.txt
  safe test -f foo/2.txt
  safe cd foo
  safe test "`git symbolic-ref HEAD`" = "refs/heads/master"
)
rc="$?" ; [ "$rc" -ne 0 ] && exit "$rc"

exit 0

